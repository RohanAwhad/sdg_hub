name: Test Jupyter Notebooks
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "releases-**"
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'tox.ini'
      - '.github/workflows/test_nb.yml' # This workflow
  pull_request:
    branches:
      - "main"
      - "releases-**"
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'tox.ini'
      - '.github/workflows/test_nb.yml' # This workflow

env:
  LC_ALL: en_US.UTF-8
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  test-openai:
    name: Test OpenAI connectivity
    runs-on: ubuntu-latest
    steps:
      - name: curl OpenAI chat completion
        run: |
          sudo apt-get install curl
          curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-4.1-nano",
              "messages": [{"role": "user", "content": "Hello!"}],
              "max_tokens": 2
            }'

  test-mock-server:
    name: Test Mock Inference Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install flask werkzeug click pyyaml

      - name: Create test config
        run: |
          cat > test_config.yml << 'EOF'
          matches:
            - contains: ["Hello"]
              response: "Hi there!"
            - response: "Default response"
          port: 11434
          debug: true
          EOF

      - name: Start mock server
        run: |
          python tests/mock_inference_server/app.py -c test_config.yml &
          sleep 2

      - name: Test completions endpoint
        run: |
          curl -X POST http://localhost:11434/v1/completions \
            -H "Content-Type: application/json" \
            -d '{"prompt": "Hello world", "model": "test-model"}' \
            --fail-with-body
